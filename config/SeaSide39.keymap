#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos {
        compatible = "zmk,combos";

        chg_lang {
            bindings = <&kp LA(GRAVE)>;
            key-positions = <16 17>;
        };

        left_button {
            bindings = <&mkp MB1>;
            key-positions = <26 27>;
        };

        right_button {
            bindings = <&mkp RCLK>;
            key-positions = <27 28>;
        };

        scroll {
            bindings = <&mo 5>;
            key-positions = <26 28>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        layer6 {
            bindings = <&mo 6>;
            key-positions = <9 8 7 6>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_press>;

            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W     &kp E         &kp R               &kp T                                    &kp Y        &kp U        &kp I      &kp O       &kp P
&kp A             &kp S     &kp D         &mt LCTRL F         &mt LCMD G                               &mt RCMD H   &mt RCTRL J  &kp K      &kp L       &kp MINUS
&mt LEFT_SHIFT Z  &lt 3 X   &kp C         &kp V               &kp B                                    &lt 3 N      &kp M        &kp COMMA  &kp PERIOD  &mt RSHIFT SLASH
&kp LCTRL         &kp LCMD  &kp LEFT_ALT  &mt LEFT_SHIFT TAB  &lt 1 SPACE  &mo 2      &lt 2 BACKSPACE  &lt 1 ENTER                                      &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN    &kp HASH          &kp DOLLAR    &kp PERCENT                          &kp AMPERSAND      &kp ASTERISK   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL
&kp GRAVE        &kp TILDE      &none             &kp PIPE      &kp CARET                            &kp COLON          &kp SEMICOLON  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS
&trans           &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION  &none                                &kp DOUBLE_QUOTES  &kp SQT        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp NON_US_BACKSLASH
&trans           &trans         &trans            &kp TAB       &kp SPACE    &trans      &kp DELETE  &kp BACKSPACE                                                                  &trans
            >;
        };

        NUM {
            bindings = <
&trans          &kp F7  &kp F8  &kp F9  &kp F12                             &kp ASTERISK      &kp N7  &kp N8        &kp N9  &kp MINUS
&kp CAPSLOCK    &kp F4  &kp F5  &kp F6  &kp F11                             &kp SLASH         &kp N4  &kp NUMBER_5  &kp N6  &kp SLASH
&kp LEFT_SHIFT  &kp F1  &kp F2  &kp F3  &kp F10                             &kp N0            &kp N1  &kp N2        &kp N3  &kp PERIOD
&trans          &trans  &trans  &trans  &trans   &trans      &kp LESS_THAN  &kp GREATER_THAN                                &kp COMMA
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &none   &kp UP_ARROW    &mkp MB5                 &trans                             &kp HOME       &kp LA(LG(L))  &kp LA(LG(R))  &kp END          &kp LS(LG(UP_ARROW))
&kp TAB         &none   &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END                            &kp LEFT       &kp DOWN       &kp UP_ARROW   &kp RIGHT_ARROW  &kp F5
&kp LEFT_SHIFT  &none   &trans          &kp LG(LS(RIGHT_ARROW))  &trans                             &trans         &kp PAGE_DOWN  &kp PAGE_UP    &kp LC(W)        &kp RIGHT_SHIFT
&trans          &trans  &trans          &trans                   &trans   &trans      &kp LA(LEFT)  &kp LA(RIGHT)                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &kp ENTER  &trans  &trans                                            &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &trans                                            &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &trans                                            &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &kp LS(LG(N5))  &kp LS(LG(N4))      &kp LC(DOWN)  &kp LC(UP_ARROW)                          &trans
            >;
        };

        CONFIG {
            bindings = <
&bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                            &trans       &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans                            &trans       &trans  &trans  &trans  &trans
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &bootloader  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans      &trans  &trans                               &trans
            >;
        };
    };
};
